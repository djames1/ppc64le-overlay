# HG changeset patch
# User Cameron Kaiser <spectre@floodgap.com>
# Date 1544721293 28800
#      Thu Dec 13 09:14:53 2018 -0800
# Node ID 2645a9df031ee5128ccca53cb80e642c02bb35c3
# Parent  5c892a6147ae856f208e77c265eda4d7b677ac52
Bug 1512162: Followup: narrow non-stack-protected window for XPConnect on ppc64le. r=

diff -r 5c892a6147ae -r 2645a9df031e js/xpconnect/src/XPCWrappedNative.cpp
--- a/js/xpconnect/src/XPCWrappedNative.cpp	Wed Dec 12 18:52:08 2018 -0800
+++ b/js/xpconnect/src/XPCWrappedNative.cpp	Thu Dec 13 09:14:53 2018 -0800
@@ -4,16 +4,18 @@
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 /* Wrapper object for reflecting native xpcom objects into JavaScript. */
 
 #if(__GNUC__ && __linux__ && __PPC64__ && _LITTLE_ENDIAN)
 // Stack protection generates incorrect code currently with gcc on ppc64le
 // (bug 1512162).
+#define MOZ_GCC_STACK_PROTECTOR_DISABLED 1 // removed at end of file
+#pragma GCC push_options
 #pragma GCC optimize("no-stack-protector")
 #endif
 
 #include "xpcprivate.h"
 #include "mozilla/jsipc/CrossProcessObjectWrappers.h"
 #include "nsWrapperCacheInlines.h"
 #include "XPCLog.h"
 #include "js/MemoryFunctions.h"
@@ -1849,8 +1851,15 @@
       free(className);
     }
     if (contractID) {
       free(contractID);
     }
   }
 }
 #endif
+
+#if (MOZ_GCC_STACK_PROTECTOR_DISABLED)
+// Reenable stack protection in following modules, if we disabled it
+// (bug 1512162).
+#pragma GCC pop_options
+#undef MOZ_GCC_STACK_PROTECTOR_DISABLED
+#endif
